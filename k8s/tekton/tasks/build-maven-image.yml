apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-maven-image
spec:
  description: >-
    Packages source with maven builds and into a container image, then pushes it
    to a container registry. Builds source into a container image using Project
    Atomic's Buildah build tool. It uses Buildah's support for building from
    Dockerfiles, using its buildah bud command.This command executes the
    directives in the Dockerfile to assemble a container image, then pushes that
    image to a container registry.
  params:
    - default:
        - install
      description: Maven goals to execute
      name: GOALS
      type: array
    - description: Reference of the image buildah will produce.
      name: IMAGE
      type: string
    - default: 'quay.io/buildah/stable:v1.14.8'
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: overlay
      description: Set buildah storage driver
      name: STORAGE_DRIVER
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'false'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
    - default: ''
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
      type: string
    - default: ''
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - args:
        - '-Dmaven.repo.local=$(workspaces.source.path)'
        - $(inputs.params.GOALS)
      command:
        - /usr/bin/mvn
      image: gcr.io/cloud-builders/mvn
      name: package-maven
      resources: {}
      workingDir: $(workspaces.source.path)/$(params.CONTEXT)
    - image: $(params.BUILDER_IMAGE)
      name: build-image
      resources: {}
      script: |
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t $(params.IMAGE) $(params.CONTEXT)
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      script: |
        buildah --storage-driver=$(params.STORAGE_DRIVER) push \
          $(params.PUSH_EXTRA_ARGS) --tls-verify=$(params.TLSVERIFY) \
          --digestfile $(workspaces.source.path)/image-digest $(params.IMAGE) \
          docker://$(params.IMAGE)
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: digest-to-results
      resources: {}
      script: >-
        cat $(workspaces.source.path)/image-digest | tee
        /tekton/results/IMAGE_DIGEST
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
